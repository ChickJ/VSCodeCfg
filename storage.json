{
    "lastKnownKeybindings": {
        "workbench.action.files.newUntitledFile": {
            "id": "workbench.action.files.newUntitledFile",
            "label": "Ctrl+N",
            "isNative": true
        },
        "workbench.action.files.openFolder": {
            "id": "workbench.action.files.openFolder",
            "label": "Ctrl+K Ctrl+O",
            "isNative": false
        },
        "workbench.action.reopenClosedEditor": {
            "id": "workbench.action.reopenClosedEditor",
            "label": "Ctrl+Shift+T",
            "isNative": true
        },
        "workbench.action.openRecent": {
            "id": "workbench.action.openRecent",
            "label": "Ctrl+R",
            "isNative": true
        },
        "workbench.action.files.save": {
            "id": "workbench.action.files.save",
            "label": "Ctrl+S",
            "isNative": true
        },
        "workbench.action.files.saveAs": {
            "id": "workbench.action.files.saveAs",
            "label": "Ctrl+Shift+S",
            "isNative": true
        },
        "workbench.action.openGlobalSettings": {
            "id": "workbench.action.openGlobalSettings",
            "label": "Ctrl+,",
            "isNative": false
        },
        "workbench.action.openGlobalKeybindings": {
            "id": "workbench.action.openGlobalKeybindings",
            "label": "Ctrl+K Ctrl+S",
            "isNative": false
        },
        "workbench.extensions.action.showRecommendedKeymapExtensions": {
            "id": "workbench.extensions.action.showRecommendedKeymapExtensions",
            "label": "Ctrl+K Ctrl+M",
            "isNative": false
        },
        "workbench.action.selectTheme": {
            "id": "workbench.action.selectTheme",
            "label": "Ctrl+K Ctrl+T",
            "isNative": false
        },
        "workbench.action.newWindow": {
            "id": "workbench.action.newWindow",
            "label": "Ctrl+Shift+N",
            "isNative": true
        },
        "workbench.action.closeWindow": {
            "id": "workbench.action.closeWindow",
            "label": "Ctrl+Shift+W",
            "isNative": true
        },
        "workbench.action.closeFolder": {
            "id": "workbench.action.closeFolder",
            "label": "Ctrl+K F",
            "isNative": false
        },
        "workbench.action.closeActiveEditor": {
            "id": "workbench.action.closeActiveEditor",
            "label": "Ctrl+W",
            "isNative": true
        },
        "workbench.action.quit": {
            "id": "workbench.action.quit",
            "label": "Ctrl+Q",
            "isNative": true
        },
        "undo": {
            "id": "undo",
            "label": "Ctrl+Z",
            "isNative": true
        },
        "redo": {
            "id": "redo",
            "label": "Ctrl+Y",
            "isNative": true
        },
        "editor.action.clipboardCutAction": {
            "id": "editor.action.clipboardCutAction",
            "label": "Ctrl+X",
            "isNative": true
        },
        "editor.action.clipboardCopyAction": {
            "id": "editor.action.clipboardCopyAction",
            "label": "Ctrl+C",
            "isNative": true
        },
        "editor.action.clipboardPasteAction": {
            "id": "editor.action.clipboardPasteAction",
            "label": "Ctrl+V",
            "isNative": true
        },
        "actions.find": {
            "id": "actions.find",
            "label": "Ctrl+F",
            "isNative": true
        },
        "editor.action.startFindReplaceAction": {
            "id": "editor.action.startFindReplaceAction",
            "label": "Ctrl+H",
            "isNative": true
        },
        "workbench.action.findInFiles": {
            "id": "workbench.action.findInFiles",
            "label": "Ctrl+Shift+F",
            "isNative": true
        },
        "workbench.action.replaceInFiles": {
            "id": "workbench.action.replaceInFiles",
            "label": "Ctrl+Shift+H",
            "isNative": true
        },
        "editor.emmet.action.expandAbbreviation": {
            "id": "editor.emmet.action.expandAbbreviation",
            "label": "Tab",
            "isNative": true
        },
        "editor.action.commentLine": {
            "id": "editor.action.commentLine",
            "label": "Ctrl+/",
            "isNative": false
        },
        "editor.action.blockComment": {
            "id": "editor.action.blockComment",
            "label": "Ctrl+Shift+A",
            "isNative": true
        },
        "editor.action.insertCursorAbove": {
            "id": "editor.action.insertCursorAbove",
            "label": "Shift+Alt+Up",
            "isNative": true
        },
        "editor.action.insertCursorBelow": {
            "id": "editor.action.insertCursorBelow",
            "label": "Shift+Alt+Down",
            "isNative": true
        },
        "editor.action.insertCursorAtEndOfEachLineSelected": {
            "id": "editor.action.insertCursorAtEndOfEachLineSelected",
            "label": "Shift+Alt+I",
            "isNative": true
        },
        "editor.action.addSelectionToNextFindMatch": {
            "id": "editor.action.addSelectionToNextFindMatch",
            "label": "Ctrl+D",
            "isNative": true
        },
        "editor.action.selectHighlights": {
            "id": "editor.action.selectHighlights",
            "label": "Ctrl+Shift+L",
            "isNative": true
        },
        "editor.action.copyLinesUpAction": {
            "id": "editor.action.copyLinesUpAction",
            "label": "Ctrl+Shift+Alt+Up",
            "isNative": true
        },
        "editor.action.copyLinesDownAction": {
            "id": "editor.action.copyLinesDownAction",
            "label": "Ctrl+Shift+Alt+Down",
            "isNative": true
        },
        "editor.action.moveLinesUpAction": {
            "id": "editor.action.moveLinesUpAction",
            "label": "Alt+Up",
            "isNative": true
        },
        "editor.action.moveLinesDownAction": {
            "id": "editor.action.moveLinesDownAction",
            "label": "Alt+Down",
            "isNative": true
        },
        "editor.action.selectAll": {
            "id": "editor.action.selectAll",
            "label": "Ctrl+A",
            "isNative": true
        },
        "editor.action.smartSelect.grow": {
            "id": "editor.action.smartSelect.grow",
            "label": "Shift+Alt+Right",
            "isNative": true
        },
        "editor.action.smartSelect.shrink": {
            "id": "editor.action.smartSelect.shrink",
            "label": "Shift+Alt+Left",
            "isNative": true
        },
        "workbench.view.explorer": {
            "id": "workbench.view.explorer",
            "label": "Ctrl+Shift+E",
            "isNative": true
        },
        "workbench.view.search": {
            "id": "workbench.view.search",
            "label": "Ctrl+Shift+F",
            "isNative": true
        },
        "workbench.view.scm": {
            "id": "workbench.view.scm",
            "label": "Ctrl+Shift+G",
            "isNative": true
        },
        "workbench.view.debug": {
            "id": "workbench.view.debug",
            "label": "Ctrl+Shift+D",
            "isNative": true
        },
        "workbench.view.extensions": {
            "id": "workbench.view.extensions",
            "label": "Ctrl+Shift+X",
            "isNative": true
        },
        "workbench.action.output.toggleOutput": {
            "id": "workbench.action.output.toggleOutput",
            "label": "Ctrl+K Ctrl+H",
            "isNative": false
        },
        "workbench.debug.action.toggleRepl": {
            "id": "workbench.debug.action.toggleRepl",
            "label": "Ctrl+Shift+Y",
            "isNative": true
        },
        "workbench.action.terminal.toggleTerminal": {
            "id": "workbench.action.terminal.toggleTerminal",
            "label": "Ctrl+`",
            "isNative": false
        },
        "workbench.actions.view.problems": {
            "id": "workbench.actions.view.problems",
            "label": "Ctrl+Shift+M",
            "isNative": true
        },
        "workbench.action.showCommands": {
            "id": "workbench.action.showCommands",
            "label": "Ctrl+Shift+P",
            "isNative": true
        },
        "workbench.action.toggleFullScreen": {
            "id": "workbench.action.toggleFullScreen",
            "label": "F11",
            "isNative": true
        },
        "workbench.action.toggleZenMode": {
            "id": "workbench.action.toggleZenMode",
            "label": "Ctrl+K Z",
            "isNative": false
        },
        "workbench.action.splitEditor": {
            "id": "workbench.action.splitEditor",
            "label": "Ctrl+\\",
            "isNative": false
        },
        "workbench.action.toggleEditorGroupLayout": {
            "id": "workbench.action.toggleEditorGroupLayout",
            "label": "Shift+Alt+1",
            "isNative": true
        },
        "workbench.action.toggleSidebarVisibility": {
            "id": "workbench.action.toggleSidebarVisibility",
            "label": "Ctrl+B",
            "isNative": true
        },
        "workbench.action.togglePanel": {
            "id": "workbench.action.togglePanel",
            "label": "Ctrl+J",
            "isNative": true
        },
        "editor.action.toggleWordWrap": {
            "id": "editor.action.toggleWordWrap",
            "label": "Alt+Z",
            "isNative": true
        },
        "workbench.action.zoomIn": {
            "id": "workbench.action.zoomIn",
            "label": "Ctrl+=",
            "isNative": false
        },
        "workbench.action.zoomOut": {
            "id": "workbench.action.zoomOut",
            "label": "Ctrl+-",
            "isNative": false
        },
        "workbench.action.zoomReset": {
            "id": "workbench.action.zoomReset",
            "label": "Ctrl+NumPad0",
            "isNative": false
        },
        "workbench.action.navigateBack": {
            "id": "workbench.action.navigateBack",
            "label": "Ctrl+Alt+-",
            "isNative": false
        },
        "workbench.action.navigateForward": {
            "id": "workbench.action.navigateForward",
            "label": "Ctrl+Shift+-",
            "isNative": false
        },
        "workbench.action.nextEditor": {
            "id": "workbench.action.nextEditor",
            "label": "Ctrl+PageDown",
            "isNative": true
        },
        "workbench.action.previousEditor": {
            "id": "workbench.action.previousEditor",
            "label": "Ctrl+PageUp",
            "isNative": true
        },
        "workbench.action.openNextRecentlyUsedEditorInGroup": {
            "id": "workbench.action.openNextRecentlyUsedEditorInGroup",
            "label": "Ctrl+Tab",
            "isNative": true
        },
        "workbench.action.openPreviousRecentlyUsedEditorInGroup": {
            "id": "workbench.action.openPreviousRecentlyUsedEditorInGroup",
            "label": "Ctrl+Shift+Tab",
            "isNative": true
        },
        "workbench.action.focusFirstEditorGroup": {
            "id": "workbench.action.focusFirstEditorGroup",
            "label": "Ctrl+1",
            "isNative": true
        },
        "workbench.action.focusSecondEditorGroup": {
            "id": "workbench.action.focusSecondEditorGroup",
            "label": "Ctrl+2",
            "isNative": true
        },
        "workbench.action.focusThirdEditorGroup": {
            "id": "workbench.action.focusThirdEditorGroup",
            "label": "Ctrl+3",
            "isNative": true
        },
        "workbench.action.focusNextGroup": {
            "id": "workbench.action.focusNextGroup",
            "label": "Ctrl+K Ctrl+RightArrow",
            "isNative": false
        },
        "workbench.action.focusPreviousGroup": {
            "id": "workbench.action.focusPreviousGroup",
            "label": "Ctrl+K Ctrl+LeftArrow",
            "isNative": false
        },
        "workbench.action.quickOpen": {
            "id": "workbench.action.quickOpen",
            "label": "Ctrl+P",
            "isNative": true
        },
        "workbench.action.gotoSymbol": {
            "id": "workbench.action.gotoSymbol",
            "label": "Ctrl+Shift+O",
            "isNative": true
        },
        "workbench.action.showAllSymbols": {
            "id": "workbench.action.showAllSymbols",
            "label": "Ctrl+T",
            "isNative": true
        },
        "editor.action.goToDeclaration": {
            "id": "editor.action.goToDeclaration",
            "label": "F12",
            "isNative": true
        },
        "editor.action.goToImplementation": {
            "id": "editor.action.goToImplementation",
            "label": "Ctrl+F12",
            "isNative": true
        },
        "workbench.action.gotoLine": {
            "id": "workbench.action.gotoLine",
            "label": "Ctrl+G",
            "isNative": true
        },
        "workbench.action.debug.start": {
            "id": "workbench.action.debug.start",
            "label": "F5",
            "isNative": true
        },
        "workbench.action.debug.run": {
            "id": "workbench.action.debug.run",
            "label": "Ctrl+F5",
            "isNative": true
        },
        "workbench.action.debug.stop": {
            "id": "workbench.action.debug.stop",
            "label": "Shift+F5",
            "isNative": true
        },
        "workbench.action.debug.restart": {
            "id": "workbench.action.debug.restart",
            "label": "Ctrl+Shift+F5",
            "isNative": true
        },
        "workbench.action.debug.stepOver": {
            "id": "workbench.action.debug.stepOver",
            "label": "F10",
            "isNative": true
        },
        "workbench.action.debug.stepInto": {
            "id": "workbench.action.debug.stepInto",
            "label": "F11",
            "isNative": true
        },
        "workbench.action.debug.stepOut": {
            "id": "workbench.action.debug.stepOut",
            "label": "Shift+F11",
            "isNative": true
        },
        "workbench.action.debug.continue": {
            "id": "workbench.action.debug.continue",
            "label": "F5",
            "isNative": true
        },
        "editor.debug.action.toggleBreakpoint": {
            "id": "editor.debug.action.toggleBreakpoint",
            "label": "F9",
            "isNative": true
        },
        "editor.debug.action.toggleColumnBreakpoint": {
            "id": "editor.debug.action.toggleColumnBreakpoint",
            "label": "Shift+F9",
            "isNative": true
        },
        "workbench.action.tasks.build": {
            "id": "workbench.action.tasks.build",
            "label": "Ctrl+Shift+B",
            "isNative": true
        }
    },
    "theme": "vs vscode-theme-defaults-themes-light_vs-json",
    "pickerWorkingDir": "/home/jon.chick/Code",
    "openedPathsList": {
        "files": [
            "/home/jon.chick/.local/share/applications/slick.desktop",
            "/run/media/jon.chick/33B8-008B/Code/ca.git/config",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/ProjectDataReader.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/TdkConfigReader.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/ReferenceElement.cs",
            "/home/jon.chick/Downloads/TDK 63/Source/MsbuildExtensions/Tripitaka.msbuild/Code.cs",
            "/home/jon.chick/Code/Test/test.txt",
            "/home/jon.chick/Code/Test/build.txt",
            "/home/jon.chick/Code/Tripitaka/.Build/Assemblies/libkernel.so.0/Release/obj/LibKernel.csproj.nuget.g.targets",
            "/home/jon.chick/Code/Test/obj/Test.csproj.nuget.g.targets",
            "/home/jon.chick/Code/Tripitaka/.Build/Assemblies/libkernel.so.0/Release/obj/LibKernel.csproj.nuget.g.props",
            "/home/jon.chick/Code/Test/obj/Test.csproj.nuget.g.props",
            "/home/jon.chick/Code/Home Configuration/git_config",
            "/opt/dotnet/sdk/1.0.1/Sdks/Microsoft.NET.Sdk/build/Microsoft.NET.Sdk.DefaultItems.props",
            "/opt/dotnet/sdk/1.0.1/Sdks/Microsoft.NET.Sdk/build/Microsoft.NET.Sdk.DefaultItems.targets",
            "/run/media/jon.chick/Pluto/Projects/tripitaka/Solution.props",
            "/home/jon.chick/Code/Compare/build.txt",
            "/home/jon.chick/Code/_Build/libsekernel-0.0.1-alpha/obj/project.assets.json",
            "/home/jon.chick/Code/Compare/obj/project.assets.json",
            "/home/jon.chick/Code/_Build/libsekernel-0.0.1-alpha/obj/libsekernel.csproj.nuget.g.targets",
            "/home/jon.chick/Code/Compare/obj/libsekernel.csproj.nuget.g.props",
            "/home/jon.chick/Code/_Build/libsekernel-0.0.1-alpha/obj/libsekernel.csproj.nuget.g.props",
            "/opt/dotnet/sdk/1.0.1/Sdks/Microsoft.NET.Sdk/build/Microsoft.NET.DefaultOutputPaths.targets",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/AfterMicrosoft.targets",
            "/opt/dotnet/sdk/1.0.1/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets",
            "/opt/dotnet/sdk/1.0.1/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets",
            "/home/jon.chick/.local/share/krusader/krbookmarks.xml",
            "/opt/dotnet/sdk/1.0.1/runtimes/any/native/NuGet.targets",
            "/home/jon.chick/Code/sekernel/libsekernel/clean",
            "/home/jon.chick/Code/sekernel/libsekernel/obj/project.assets.json",
            "/home/jon.chick/Code/sekernel/libsekernel/obj/libsekernel.csproj.nuget.g.targets",
            "/home/jon.chick/Code/sekernel/libsekernel/obj/libsekernel.csproj.nuget.g.props",
            "/home/jon.chick/Code/sekernel/libsekernel/bin/Debug/netcoreapp1.1/libsekernel.deps.json",
            "/home/jon.chick/Code/sekernel/libsekernel/bin/Debug/netcoreapp1.1/libsekernel.runtimeconfig.dev.json",
            "/home/jon.chick/Code/sekernel/libsekernel/bin/Debug/netcoreapp1.1/libsekernel.runtimeconfig.json",
            "/home/jon.chick/Code/_Build/bin/libsebuild-0.0.1-alpha/debug/netstandard1.5/libsebuild.deps.json",
            "/home/jon.chick/Code/_Build/install/libsebuild.deps.json",
            "/opt/dotnet/sdk/1.0.1/runtimes/any/native/Microsoft.TestPlatform.targets",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/GenerateSerializerAssembly.targets",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/ExtraClean.targets",
            "/run/media/jon.chick/External/Backup/tdk.t4/version",
            "/run/media/jon.chick/External/Backup/tdk.t4/Utility.t4",
            "/run/media/jon.chick/External/Backup/tdk.t4/Bootstrap.props",
            "/run/media/jon.chick/External/Backup/tdk.t4/Tripitaka.cs.clr.dll.msbuild",
            "/run/media/jon.chick/External/Backup/tdk.t4/Tripitaka.cpp.clr.dll.msbuild",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/SharedAssemblyInfo.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/References.props",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/ReadAssemblyInfoTarget.targets",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/CustomDictionary.xml",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/ComponentManifest.props",
            "/run/media/jon.chick/External/Backup/tdk.t4/MSBuild/Herne/BeforeMicrosoft.targets",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/ProjectData.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Project.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Platform.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/GlobalSuppressions.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Filetype.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Element.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Configuration.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/ComponentManifest.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Component.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/MsbuildExtensions/Tripitaka.msbuild/Code.cs",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/tdk/tdk/Program.cs",
            "/home/jon.chick/Code/tbc/packages/audicon.smartexporter.libsekernel/0.0.1-alpha/Audicon.SmartExporter.libsekernel.nuspec",
            "/home/jon.chick/.vscode/extensions/sandcastle.vscode-open-0.1.0/package.json",
            "/home/jon.chick/.vscode/extensions/mattn.OpenVim-0.0.8/package.json",
            "/run/media/jon.chick/External/Backup/tdk.t4/Source/Configure/Configure/Program.cs",
            "/home/jon.chick/Code/tbc/Audicon.SmartExporter.libsekernel/0.0.1/Audicon.SmartExporter.libsekernel.nuspec",
            "/home/jon.chick/.nuget/NuGet/NuGet.Config"
        ],
        "folders": [
            "/home/jon.chick/Code/Tripitaka",
            "/home/jon.chick/Code/Carbon",
            "/home/jon.chick/Code/Certificate Authority",
            "/home/jon.chick/Code/ca",
            "/home/jon.chick/Code/DotNet",
            "/home/jon.chick/Code/DotNetCore",
            "/home/jon.chick/Code/NuGet.Client",
            "/home/jon.chick/Code/CoreHelloWorld"
        ]
    },
    "windowsState": {
        "openedWindows": [],
        "openedFolders": [],
        "lastActiveWindow": {
            "workspacePath": "/home/jon.chick/Code/Tripitaka",
            "uiState": {
                "mode": 1,
                "x": 3840,
                "y": 64,
                "width": 1920,
                "height": 2096
            },
            "backupPath": "/home/jon.chick/.config/Code/Backups/49845b33a2536593dbcee40ea076299c"
        }
    },
    "telemetry.machineId": "88e739c5415ce2a43a0ce7c1aa990c57cd288c8c8db773b31e70f320e53c2a02",
    "themeBackground": "#ffffff"
}